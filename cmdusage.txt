create a new projectFolder

python -m venv virtualEnvironmentName
    pip install django

\virtualEnvironmentName\Scripts\activate
    cd.. cd..

django-admin startproject projectName
    cd projectName 

python manage.py startapp appName
_________________________________________________________________

create templates folder-projectName
    set urls - give names to urls 
    set views - define function to return renders(responses)
    include app urls in mainApp(projectname) 

python manage.py runserver

edit app-models: define class className(model.Model)
    python manage.py makemigration
    python manage.py migrate
_________________________________________________________________


CRUD-Operations:
    CREATE::
    from the request from the form (csrf_token is must)
    if request.POST then get the data fromthe POST
    make an object of model = modelClassName(data)
    object.save()

    READ::
    object = modelClassName.objects.all()
    pass it to the html as array(dictionary)-> return render(request,"example.html",{"items":object})

    EDIT::DELETE::
    pass the primary key to the path->
    
    EDITING::path('edit/<pk>', views.edit,name="edit"),
                def edit(request,pk):
                    itemToEdit = ItemsInfo.objects.get(pk=pk)
                    if request.POST:
                        name = request.POST.get("name")
                        description = request.POST.get("description")
                        quantity = request.POST.get("quantity")
                        itemToEdit.name = name
                        itemToEdit.description = description 
                        itemToEdit.quantity = quantity
                        itemToEdit.save()
                    return render(request,"edit.html",{"item":itemToEdit})

    DELETING::path('delete/<pk>', views.delete,name="delete"),
                def delete(request,pk):
                    itemToDelete = ItemsInfo.objects.get(pk=pk)
                    itemToDelete.delete()
                    itemList = ItemsInfo.objects.all()
                    return render(request,"list.html",{"items":itemList})
_________________________________________________________________

Python shell(test small code):: python manage.py shell
Admin default given by django to manage the entire project
SuperUser:
    python manage.py createsuperuser
    /admin
    to include the crud for userdefinde models - edit the admin.py in the app
    from . model import ModelClass
    admin.site.register(modelName)
_________________________________________________________________
